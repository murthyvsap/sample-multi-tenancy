const SecurityHelper = require('../../helper/security_helper');
const Logger = require('../../helper/logger');
const logger = Logger('MODEL');

module.exports = async context => {
    const newTenant = `TENANT-${SecurityHelper.getTenant(context)}-META`;

    // cds.context.tenant is used for acquire
    const { cds } = global;
    const [major, minor] = cds.version.split('.').map(Number);
    if (major > 5 || (major === 5 && minor >= 9)) { // > cds^5.9
        cds.context.tenant = newTenant;
    } else if (major >= 4) { // > cds^4
        context.tenant = newTenant;
        context.user.tenant = newTenant; // Major-TODO: remove
    } else { // > cds^3
        context.attr.identityZone = newTenant;
    }

    const db = cds.db;

    const timestamp = new Date().toISOString();
    const content = context.data.content;

    if (logger.hasLevel(logger.LOG_LEVELS.debug)) {
        logger.debug(`Write custom files \n`, content);
    }

    let values = [];
    if(Array.isArray(content)) {
        content.forEach(entry => {
            values.push([
                entry.name,
                entry.category,
                entry.content,
                timestamp,
                entry.name,
                entry.category,
            ])
        });

    } else {
        values = [
            content.name,
            content.category,
            content.content,
            timestamp,
            content.name,
            content.category,
        ];
    }

    const upsert = 'UPSERT CUSTOM_TENANT_CONTENT(NAME, CATEGORY, CONTENT, TIMESTAMP) VALUES (?, ?, ?, ?) WHERE NAME = ? AND CATEGORY = ?';
    await db.transaction(context).run(upsert, values);
};
